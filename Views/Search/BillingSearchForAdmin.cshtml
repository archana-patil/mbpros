@model  Mbpros.Models.BillingModel
@{
    ViewBag.Title = "BillingSearchForAdmin";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Hidden("hdnBID")
<div class="form_border">
    <div class="message" >

    </div>
    <form class="form-horizontal customIzeFormELement normal_label" id="SearchBilling">
        <h2>Search Billing Logs </h2>
        @{
            if (ViewBag.EditMessage != "" && ViewBag.EditMessage != null)
            {
            <div class="alert alert-success">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Success!</strong> @ViewBag.EditMessage.
            </div>
            }
        }
        <div class="custom-seach-wrap adjusted-date">
            <div class="row">
                <div class="col-sm-3 big-3">
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-5 control-label">Office Name</label>
                        <div class="col-sm-7">
                            @Html.TextBoxFor(model => model.OfficeName, new { @class = "form-control input-sm", id= "OfficeName"})
                        </div>
                    </div>
                </div>
                <div class="col-sm-3 big-3">
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-5 control-label">Patient Name</label>
                        <div class="col-sm-7">
                            @Html.TextBoxFor(model => model.PatientName, new { @class = "form-control input-sm", id= "PatientName" })

                        </div>
                    </div>
                </div>
                <div class="col-sm-3 big-3">
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-5 control-label">Form ID</label>
                        <div class="col-sm-7">
                            @Html.TextBoxFor(model => model.FormId, new { @class = "form-control input-sm" , id= "FormId"})
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-3 big-3">
                    <div class="form-group date-row">
                        <label for="inputEmail3" class="col-sm-5 control-label">Submission date</label>
                        <div class="col-xs-3 dash">
                            @Html.TextBoxFor(model => model.SubFrom, new { id= "SubFrom",@class = "form-control input-sm datetimepicker", onkeydown = "return false", @placeholder = "from" })
                        </div>
                        <div class="col-xs-3">
                            @Html.TextBoxFor(model => model.SubTo, new { id= "SubTo", @class = "form-control input-sm datetimepicker", onkeydown = "return false", @placeholder = "to" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-3 big-3">
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-5 control-label">Service Date</label>
                        <div class="col-sm-7">

                            @Html.TextBoxFor(model => model.ServiceDate, new { @class = "form-control input-sm datetimepicker", onkeydown = "return false", id="ServiceDate" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-3 big-3">
                    <div class="form-group">
                        <label for="inputEmail3" class="col-sm-5 control-label">Form Type</label>
                        <div class="col-sm-7">
                            @Html.DropDownListFor(model => model.ArchiveOption, Model.OptionList, new { id = "ddlOption", @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-1 inline-btn">
                    <button class="btn btn-primary btn-sm" id="btnSearchBilling"><i class="fa fa-search"></i></button>
                    <button class="btn btn-primary btn-sm" id="btnReset"  ><i class="fa fa-refresh"></i></button>
                </div>
            </div>
        </div>
    </form>
    <div class="row">
        <div class="col-md-12">
            <div class="jqGrid">
                <table id="divBillingSearch" class="scroll"></table>
                <div id="pager" class="scroll" style="text-align: center;"></div>
            </div>
        </div>
    </div>
    <div id="dialog" title="Confirmation Required" style="display:none">
      Are you sure you want to delete the billing detail?
    </div>
    <div id="dialog1" title="Confirmation Required" style="display:none">
      Are you sure you want to archive the billing detail?
    </div>
    <div id="dialog2" title="Confirmation Required" style="display:none">
      Are you sure you want to un-archive the billing detail?
    </div>
</div>

@section Scripts{
    <script src="~/Scripts/partialviewJS.js"></script>
    <script src="/Scripts/jquery-ui.min.js"></script>
    <script lang="javascript">
        var gridUrl = '@Url.Action("DynamicGridData2", "Search")';
        var rowCount = 10;
        var filters = new Array();
        var pageNumber = 1;

        $(document).ready(function () {
            $("#ddlOption").val(2);
            isLoggedIn();

            $("#dialog, #dialog1, #dialog2").dialog({
                autoOpen: false,
                modal: true
            });

            $('#btnSearchBilling').click(function (e) {
                SearchData();
                return false;                
            });

            $('#btnReset').click(function (e) {
                $("#OfficeName").val('');
                $("#PatientName").val('');
                $("#SubFrom").val('');
                $("#SubTo").val('');
                $("#FormId").val('');
                $("#ServiceDate").val('');
                $("#ddlOption").val(2);
                SearchData();
                return false;
            });


            $("#divBillingSearch").jqGrid({
                url: gridUrl,
                datatype: 'json',
                mtype: 'POST',
                postData: { page: "pageIndex", rows: "pageSize", sidx: "sortIndex", sord: "sortDirection", "filters": filters, "firstLoading": false },
                //success: function (gridData) { alert(gridData); },
                colNames: ['ID', 'Pdf', 'Edit', 'IsArchived', 'Action', 'Submit Date', 'Office Name', 'Patient1 Name', 'Dates of Services', 'PCodes', 'DX Codes', 'Special Note', 'Delete'],
                colModel: [
                        { name: "PatientBillingID", index: "PatientBillingID", width: 50 },
                       {
                           name: "PatientBillingID", index: "PatientBillingID", width: 40, align: 'center', formatter: function (data) {
                               return '<a href="/Billing/PDFForPatientBilling?BillingID=' + data + '" target="_blank"><img src="/images/pdf.gif"></a>'
                           }
                       },
                       {
                           name: "PatientBillingID", index: "PatientBillingID", width: 40, align: 'center', formatter: function (data) {
                               return '<a href="/Billing/BillingLog?BillingID=' + data + '&callFrom=BillingSearchForAdmin"><img src="/images/edit.png"></a>'
                           }
                       },
                       {
                           name: "IsArchived", index: "IsArchived", hidden:true
                       },
                       {
                           name: "Action", index: "Action", width: 40, align: 'center'
                       },
                       { name: "CreatedDate", index: "CreatedDate", width: 80 },
                       { name: "OfficeName", index: "OfficeName", width: 90 },
                       { name: "PatientName", index: "PatientName", width: 130 },
                       { name: "ServiceDate", index: "ServiceDate", width: 80 },
                       { name: "ProcedureCodes", index: "ProcedureCodes", width: 200 },
                       { name: "DXCode", index: "DXCode", width: 155 },
                       { name: "Note", index: "Note", width: 145 },
                       {
                           name: "PatientBillingID", index: "PatientBillingID", width: 45, align: 'center', formatter: function (data) {
                               return '<a class="confirmDelete" href="/Search/DeleteBillingRecord?patientBillingID=' + data + '"><img src="/images/delete.png" /></a>'
                           }
                       }
                ],
                gridComplete: function () {
                    var rowIDs = jQuery("#divBillingSearch").jqGrid('getDataIDs');
                    for (var i = 0; i < rowIDs.length ; i++) {
                        var rowID = rowIDs[i];
                        var row = jQuery('#theGrid').jqGrid('getRowData', rowID);
                        var imgTag;
                        if ($(this).getCell(rowID, "IsArchived") == "true") {
                            imgTag = '<a class="confirmUnArchive" href="/Search/UnarchiveBillingRecord?patientBillingID=' + $(this).getCell(rowID, "PatientBillingID") + '"><img src="/images/unarchive.png" title="Click here to un-archive"></a>'
                        }
                        else {
                            imgTag = '<a class="confirmArchive" href="/Search/ArchiveBillingRecord?patientBillingID=' + $(this).getCell(rowID, "PatientBillingID") + '"><img src="/images/archive.png" title="Click here to archive"></a>'
                        }
                        $(this).setCell(rowID, "Action", imgTag);
                    }
                    $('.ui-jqgrid-titlebar-close', '#divBillingSearch').remove();
                    rowCount = $('#divBillingSearch').jqGrid('getGridParam', 'rowNum');

                    var totalRecords = parseInt($("#divBillingSearch").getGridParam("records"));
                    var miniumValue = parseInt($('#pager_center select option:first-child').val());
                    if (totalRecords <= miniumValue) {
                        $('#pager_center input').attr("disabled", true);
                        $('#pager_center select').attr("disabled", true);
                    }
                    else if (totalRecords <= rowCount) {
                        $('#pager_center input').attr("disabled", true);
                        $('#pager_center select').attr("disabled", false);
                    }
                    else {
                        $('#pager_center input').attr("disabled", false);
                        $('#pager_center select').attr("disabled", false);
                    }
                    pageNumber = $("#divBillingSearch").jqGrid('getGridParam', 'page');
                    $('#pager_center select').val(rowCount);

                },
                //scrollOffset: 0,
                //grouping: true,
                pager: jQuery('#pager'),
                rowNum: rowCount,
                height: 'auto',
                //autowidth: true,
                rowList: [10, 20, 50, 100],
                //sortname: 'PatientBillingID',
                //sortorder: "asc",
                viewrecords: true,
                resizable: false,
                //shrinkToFit: true,
                beforeRequest: function () {
                    responsive_jqgrid($(".jqGrid"));
                },
                cmTemplate: { sortable: false }
            });
          

        });

        $(document).on("click", ".confirmDelete", function (e) {
            isLoggedIn();
            e.preventDefault();
            e.stopPropagation();
            var targetUrl = $(this).attr("href");

            $("#dialog").dialog({
                buttons: {
                    "Confirm": function () {
                        var that = this;
                        $.ajax({
                            type: "GET",
                            url: targetUrl,
                            dataType: "json",
                            success: function () {
                                // window.location.href = 'BillingSearchForAdmin?editMessage=Billing details has been deleted successfully&IsBack=true';
                                $(that).dialog("close");
                                $(e.target).closest("tr.jqgrow>td").parent().hide();
                                $(".message").html(buildMessage({ message: "Billing details has been deleted successfully", className: "alert alert-success" })).fadeIn(100).fadeOut(2000);
                            }
                        });
                    },
                    "Cancel": function () {
                        $(this).dialog("close");
                    }
                }
            });

            $("#dialog").dialog("open");
        });

        $(document).on("click", ".confirmArchive", function (e) {
            isLoggedIn();
            e.preventDefault();
            e.stopPropagation();
            var targetUrl = $(this).attr("href");

            $("#dialog1").dialog({
                buttons: {
                    "Confirm": function () {
                        var that = this;
                        $.ajax({
                            type: "GET",
                            url: targetUrl,
                            dataType: "json",
                            success: function () {
                                window.location.href = 'BillingSearchForAdmin?editMessage=Billing details has been archived successfully&IsBack=true';
                                //$(that).dialog("close");
                                //$(".message").html(buildMessage({ message: "Billing details has been archived successfully", className: "alert alert-success" })).fadeIn(100).fadeOut(2000);
                            }
                        });
                    },
                    "Cancel": function () {
                        $(this).dialog("close");
                    }
                }
            });

            $("#dialog1").dialog("open");
        });

        $(document).on("click", ".confirmUnArchive", function (e) {
            isLoggedIn();
            e.preventDefault();
            e.stopPropagation();
            var targetUrl = $(this).attr("href");

            $("#dialog2").dialog({
                buttons: {
                    "Confirm": function () {
                        var that = this;
                        $.ajax({
                            type: "GET",
                            url: targetUrl,
                            dataType: "json",
                            success: function () {
                                window.location.href = 'BillingSearchForAdmin?editMessage=Billing details has been unarchived successfully&IsBack=true';
                                //$(that).dialog("close");
                                //$(".message").html(buildMessage({ message: "Billing details has been unarchived successfully", className: "alert alert-success" })).fadeIn(100).fadeOut(2000);
                            }
                        });
                    },
                    "Cancel": function () {
                        $(this).dialog("close");
                    }
                }
            });

            $("#dialog2").dialog("open");
        });


        function SearchData() {
            isLoggedIn();
            var OfficeName = $("#OfficeName").val();
            var PatientName = $("#PatientName").val();
            var FormId = $("#FormId").val();
            var SubFrom = $("#SubFrom").val();
            var SubTo = $("#SubTo").val();
            var ServiceDate = $("#ServiceDate").val();
            var ArchiveOption = $("#ddlOption").val();
            var IsBack = false;
            filters = {
                OfficeName: OfficeName, PatientName: PatientName, FormId: FormId, SubFrom: SubFrom, SubTo: SubTo,ServiceDate:ServiceDate, ArchiveOption: ArchiveOption, IsBack: false
            };
            pageNumber = 1;
            $("#divBillingSearch").jqGrid('setGridParam', { search: true, postData: { "filters": filters, "firstLoading": false } }).trigger("reloadGrid", [{ page: pageNumber }]);
        }
    </script>
}